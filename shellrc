export GOPATH=$HOME/.go
export PATH=$PATH:$GOPATH/bin
export EDITOR='vim'
export NNTPSERVER=news.epita.fr
export HISTFILE=$HOME/.history
export HISTSIZE=$((2 ** 15 - 1))

which nproc 2> /dev/null > /dev/null
if [ $? -eq 0 ] && [ $(nproc) -gt 1 ]; then
	export MAKEFLAGS="-j$(($(nproc) - 1))"
fi

# Alias
alias xclip='xclip -i -selection clipboard'
alias gwall='gcc -Wall -Wextra -Werror -std=c99 -pedantic -g3'
alias ls='ls --classify --tabsize=0 --literal --color --show-control-chars --human-readable'
alias cp='cp --interactive'
alias mv='mv --interactive'
alias rm='rm --interactive'
alias l='ls'
alias ll='ls -l'
alias la='ls -a'
alias lla='ls -la'
alias df='df --human-readable'
alias du='du --human-readable'
alias gpg='gpg2'
alias grep='grep --color --exclude-dir={.bzr,CVS,.git,.hg,.svn}'
alias less='less -R'
alias ssh='TERM=xterm-256color ssh'
alias klog='dmesg --color=always | less -R'

function compress() {
	if [ -z "$1" ]; then
		echo compress takes a file or a direcory in argument >&2
		return 1
	fi
	if [ -d "$1" ]; then
		tar cjvf "${1}.tar.bz2" "$1" && rm -rf "$1"
	elif [ -f "$1" ]; then
		bzip2 -z "$1"
	else
		echo Aucun fichier ou dossier de ce type >&2
		return 2
	fi
}

function reshadow() {
	local keydir="$(gpgconf --list-dirs homedir)/private-keys-v1.d"
	if [ -d "${keydir}" ]; then
		for key in $(find ${keydir} -name \*.key); do
			if [ "$(head -c 24 $key | tail -c 20)" = "shadowed-private-key" ]; then
				rm -f "$key"
			fi
		done
		gpg --card-status &> /dev/null
		echo "Done"
	else
		echo "GPG keydir not found" >&2
		return 1
	fi
}

# Ls colors
if [ -x /usr/bin/dircolors ]; then
	if [ -r $HOME/.dir_colors ]; then
		eval "$(dircolors $HOME/.dir_colors)"
	else
		eval "$(dircolors)"
	fi
fi

if [ !"$SSH_CONNECTION" ] && [ "$SSH_TTY" != $(tty) ]; then
	# Set GPG TTY
	export GPG_TTY=$(tty)

	# Refresh gpg-agent tty in case user switches into an X session
	gpg-connect-agent updatestartuptty /bye >/dev/null

	# Set SSH to use gpg-agent
	unset SSH_AGENT_PID
	if [ "${gnupg_SSH_AUTH_SOCK_by:-0}" -ne $$ ]; then
		export SSH_AUTH_SOCK="$(gpgconf --list-dirs agent-ssh-socket)"
		if [ ! -e "$SSH_AUTH_SOCK" ]; then
			export SSH_AUTH_SOCK="$(gpgconf --list-dirs | grep homedir | cut -d: -f2)/S.gpg-agent.ssh"
		fi
	fi
fi

# Custom shell config
source $HOME/.customrc
